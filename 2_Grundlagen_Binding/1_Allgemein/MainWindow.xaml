<Window x:Class="Allgemein.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="350" Width="525"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:allgemein="clr-namespace:Allgemein"
        mc:Ignorable="d" >

    <Grid d:DataContext="{d:DesignInstance allgemein:IMyViewModel}"
          allgemein:MySpecialAttachedProperty.MyAttachable="Attached value on Grid" >
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        
        <!-- Choose the DataContext you want to use in the CodeBehind! -->
        
        <TextBlock Grid.Row="0" Grid.Column="0" Text="Simple Binding 1:" />
        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Text}" x:Name="TextBox1" />

        <TextBlock Grid.Row="1" Grid.Column="0" Text="Simple Binding 2:" />
        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Text}" x:Name="TextBox2" />
        
        <!-- 
            Following two lines demonstrate Attachable Properties:
            One may missuse another UI Element as a "DataContainer" (since IT IS a DependencyObject),
            attach any attachable property one may want and then let other UI elements bind TwoWay to that property.
        
            Thus: the following two TextBoxes will be kept in Sync as soon as the Focus leaves the (edited) TextBox.
        -->
        <TextBlock Grid.Row="2" Grid.Column="0" Text="Attached Value on Grid 1:" />
        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}, Path=(allgemein:MySpecialAttachedProperty.MyAttachable), Mode=TwoWay}" x:Name="TextBox3" />

        <TextBlock Grid.Row="3" Grid.Column="0" Text="Attached Value on Grid 2:" />
        <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}, Path=(allgemein:MySpecialAttachedProperty.MyAttachable), Mode=TwoWay}" x:Name="TextBox4" />
    </Grid>
</Window>
